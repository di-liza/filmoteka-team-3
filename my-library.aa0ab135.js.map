{"mappings":"YAAA,IAAMA,EAAc,CAClB,CAAEC,GAAI,GAAIC,KAAM,UAChB,CAAED,GAAI,GAAIC,KAAM,aAChB,CAAED,GAAI,GAAIC,KAAM,aAChB,CAAED,GAAI,GAAIC,KAAM,UAChB,CAAED,GAAI,GAAIC,KAAM,SAChB,CAAED,GAAI,GAAIC,KAAM,eAChB,CAAED,GAAI,GAAIC,KAAM,SAChB,CAAED,GAAI,MAAOC,KAAM,UACnB,CAAED,GAAI,GAAIC,KAAM,WAChB,CAAED,GAAI,GAAIC,KAAM,WAChB,CAAED,GAAI,GAAIC,KAAM,UAChB,CAAED,GAAI,MAAOC,KAAM,SACnB,CAAED,GAAI,KAAMC,KAAM,WAClB,CAAED,GAAI,MAAOC,KAAM,WACnB,CAAED,GAAI,IAAKC,KAAM,mBACjB,CAAED,GAAI,MAAOC,KAAM,YACnB,CAAED,GAAI,GAAIC,KAAM,YAChB,CAAED,GAAI,MAAOC,KAAM,OACnB,CAAED,GAAI,GAAIC,KAAM,YAGX,SAASC,EAAUC,EAAUC,GAClC,IAAIC,EAAc,GAClB,QAAiBC,IAAbH,EAEF,OADAE,EAAcE,OAAOC,OAAOJ,GAAQK,SAAQ,SAAAC,G,OAASA,EAAMT,I,KAC3CU,OAAS,EACEN,EAAYO,MAAM,EAAG,GAAGC,KAAK,MAAQ,UAGzDR,EAAYQ,KAAK,MAAQ,UAC3B,GAAwB,IAApBV,EAASQ,OAClB,MAAO,Q,IAGJG,GAAa,EAAbC,GAAa,EAAbC,OAAaV,E,IAAlB,I,IAAKW,E,gBAAA,IAAMC,EAANC,EAAaC,MAChBrB,EAAYsB,KAAI,SAAAC,GACVA,EAAUtB,KAAOkB,GACnBb,EAAYkB,KAAKD,EAAUrB,K,KAH5BuB,EAAiBrB,EAAQsB,OAAAC,cAAzBZ,GAAAG,EAAAO,EAAaG,QAAAC,MAAbd,GAAa,EAAAe,EAAAL,EAAAP,E,UAAbF,GAAa,EAAbC,EAAac,C,aAAbhB,GAAa,MAAbU,EAAaO,QAAbP,EAAaO,Q,YAAbhB,E,MAAAC,C,EAOL,OAAIX,EAAYM,OAAS,EACEN,EAAYO,MAAM,EAAG,GAAGC,KAAK,MAAQ,UAGzDR,EAAYQ,KAAK,K,CCvC1B,IAAMmB,EAAkBC,SAASC,cAAc,qBAEzCC,EAAY,CAChBC,QAASH,SAASC,cAAc,uBAChCG,MAAOJ,SAASC,cAAc,wBAwBhC,SAASI,EAAoBC,GAC3BP,EAAgBQ,UAAYD,EACzBlB,KAAI,SAAAoB,G,IAGCC,EAHEC,EAAWF,EAAXE,YAAavC,EAAMqC,EAANrC,OAAQwC,EAAKH,EAALG,MAAOC,EAAYJ,EAAZI,aAAc7C,EAAEyC,EAAFzC,GAC1C8C,EAAa5C,EAAUE,GACvB2C,EAAYF,EAAajC,MAAM,EAAG,GAOxC,OAFE8B,EAHGC,EAGM,mCAA+CK,OAAZL,GAFnC,sDAIJ,iDACmCK,OADchD,EAAG,sDACDgD,OAAhBN,EAAO,WACdM,OADuBJ,EAAM,iDAG5BI,OAFDJ,EAAM,mGAGNI,OADCF,EAAW,iDACFE,OAAVD,EAAU,kJ,IAK9ClC,KAAK,G,CA1CVsB,EAAUC,QAAQa,iBAAiB,SAGnC,WACE,IAAMC,EAASC,aAAaC,QAAQ,WAChCF,EACFZ,EAAoBe,KAAKC,MAAMJ,IAE/BlB,EAAgBQ,UAAY,E,IAPhCL,EAAUE,MAAMY,iBAAiB,SAWjC,WACE,IAAMC,EAASC,aAAaC,QAAQ,SAChCF,EACFZ,EAAoBe,KAAKC,MAAMJ,IAE/BlB,EAAgBQ,UAAY,E","sources":["src/js/genres.js","src/js/myLibraryLocalStorage.js"],"sourcesContent":["const genresNames = [\n  { id: 28, name: 'Action' },\n  { id: 12, name: 'Adventure' },\n  { id: 16, name: 'Animation' },\n  { id: 35, name: 'Comedy' },\n  { id: 80, name: 'Crime' },\n  { id: 99, name: 'Documentary' },\n  { id: 18, name: 'Drama' },\n  { id: 10751, name: 'Family' },\n  { id: 14, name: 'Fantasy' },\n  { id: 36, name: 'History' },\n  { id: 27, name: 'Horror' },\n  { id: 10402, name: 'Music' },\n  { id: 9648, name: 'Mystery' },\n  { id: 10749, name: 'Romance' },\n  { id: 878, name: 'Science Fiction' },\n  { id: 10770, name: 'TV Movie' },\n  { id: 53, name: 'Thriller' },\n  { id: 10752, name: 'War' },\n  { id: 37, name: 'Western' },\n];\n\nexport function getGenres(genreIds, genres) {\n  let genresArray = [];\n  if (genreIds === undefined) {\n    genresArray = Object.values(genres).flatMap(genre => genre.name);\n    if (genresArray.length > 3) {\n      const genresArrayShort = genresArray.slice(0, 2).join(', ') + ', Other';\n      return genresArrayShort;\n    }\n    return genresArray.join(', ') + ', Other';\n  } else if (genreIds.length === 0) {\n    return 'Other';\n  }\n\n  for (const genreId of genreIds) {\n    genresNames.map(genreName => {\n      if (genreName.id === genreId) {\n        genresArray.push(genreName.name);\n      }\n    });\n  }\n  if (genresArray.length > 3) {\n    const genresArrayShort = genresArray.slice(0, 2).join(', ') + ', Other';\n    return genresArrayShort;\n  }\n  return genresArray.join(', ');\n}\n","import { getGenres } from './genres';\n// import { LocalStorage } from './localStorage';\n\n// const localStorage = new LocalStorage();\n// localStorage.numMoviesInPages = 6; // - задаёшь сколько фильмов на странице хочешь видеть (по умолчанию 20)\n// console.log(localStorage.getPages('watched')); //  - возвращает число страниц только надо указать queue или watched\n\nconst movieCollection = document.querySelector('.movie-collection');\n\nconst buttonLib = {\n  watched: document.querySelector('.btn__library-watch'),\n  queue: document.querySelector('.btn__library-queue'),\n};\n\nbuttonLib.watched.addEventListener('click', getMoviesWatched);\nbuttonLib.queue.addEventListener('click', getMoviesQueue);\n\nfunction getMoviesWatched() {\n  const movies = localStorage.getItem('watched');\n  if (movies) {\n    createMarkupOneCard(JSON.parse(movies));\n  } else {\n    movieCollection.innerHTML = '';\n  }\n}\n\nfunction getMoviesQueue() {\n  const movies = localStorage.getItem('queue');\n  if (movies) {\n    createMarkupOneCard(JSON.parse(movies));\n  } else {\n    movieCollection.innerHTML = '';\n  }\n}\n\nfunction createMarkupOneCard(results) {\n  movieCollection.innerHTML = results\n    .map(({ poster_path, genres, title, release_date, id }) => {\n      const genresList = getGenres(genres);\n      const movieYear = release_date.slice(0, 4);\n      let poster;\n      if (!poster_path) {\n        poster = 'https://otv.one/uploads/default_image/thumbnail.jpg';\n      } else {\n        poster = `https://image.tmdb.org/t/p/w500/${poster_path}`;\n      }\n      return `  <li class=\"movie-collection__item\" data-id=\"${id}\">\n   <img class=\"movie-collection__poster\" src=\"${poster}\" alt=\"${title}\" />\n   <h2 class=\"movie-collection__title\">${title}</h2>\n   <div class=\"movie-collection__discription\">\n     <p class=\"movie-collection__genre\">${genresList}</p>\n     <p class=\"movie-collection__year\">${movieYear}</p>\n   </div>\n   <button class=\"movie-collection__button\" type=\"button\"><span class=\"movie-collection__title\">Trailer</span></button>\n</li>`;\n    })\n    .join('');\n}\n"],"names":["$058be7baf2d85bd2$var$genresNames","id","name","$058be7baf2d85bd2$export$c5604fa8028da00","genreIds","genres","genresArray","undefined","Object","values","flatMap","genre","length","slice","join","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step1","genreId","_step","value","map","genreName","push","_iterator","Symbol","iterator","next","done","_loop","err","return","$34b028860f26122d$var$movieCollection","document","querySelector","$34b028860f26122d$var$buttonLib","watched","queue","$34b028860f26122d$var$createMarkupOneCard","results","innerHTML","param","poster","poster_path","title","release_date","genresList","movieYear","concat","addEventListener","movies","localStorage","getItem","JSON","parse"],"version":3,"file":"my-library.aa0ab135.js.map"}