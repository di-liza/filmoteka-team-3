{"mappings":"AAAA,MAAMA,EAAc,CAClB,CAAEC,GAAI,GAAIC,KAAM,UAChB,CAAED,GAAI,GAAIC,KAAM,aAChB,CAAED,GAAI,GAAIC,KAAM,aAChB,CAAED,GAAI,GAAIC,KAAM,UAChB,CAAED,GAAI,GAAIC,KAAM,SAChB,CAAED,GAAI,GAAIC,KAAM,eAChB,CAAED,GAAI,GAAIC,KAAM,SAChB,CAAED,GAAI,MAAOC,KAAM,UACnB,CAAED,GAAI,GAAIC,KAAM,WAChB,CAAED,GAAI,GAAIC,KAAM,WAChB,CAAED,GAAI,GAAIC,KAAM,UAChB,CAAED,GAAI,MAAOC,KAAM,SACnB,CAAED,GAAI,KAAMC,KAAM,WAClB,CAAED,GAAI,MAAOC,KAAM,WACnB,CAAED,GAAI,IAAKC,KAAM,mBACjB,CAAED,GAAI,MAAOC,KAAM,YACnB,CAAED,GAAI,GAAIC,KAAM,YAChB,CAAED,GAAI,MAAOC,KAAM,OACnB,CAAED,GAAI,GAAIC,KAAM,YAGX,SAASC,EAAUC,EAAUC,GAClC,IAAIC,EAAc,GAClB,QAAiBC,IAAbH,EAAwB,CAE1B,GADAE,EAAcE,OAAOC,OAAOJ,GAAQK,SAAQC,GAASA,EAAMT,OACvDI,EAAYM,OAAS,EAAG,CAE1B,OADyBN,EAAYO,MAAM,EAAG,GAAGC,KAAK,MAAQ,S,CAGhE,OAAOR,EAAYQ,KAAK,MAAQ,S,CAC3B,GAAwB,IAApBV,EAASQ,OAClB,MAAO,QAGT,IAAK,MAAMG,KAAWX,EACpBJ,EAAYgB,KAAIC,IACVA,EAAUhB,KAAOc,GACnBT,EAAYY,KAAKD,EAAUf,KAAK,IAItC,GAAII,EAAYM,OAAS,EAAG,CAE1B,OADyBN,EAAYO,MAAM,EAAG,GAAGC,KAAK,MAAQ,S,CAGhE,OAAOR,EAAYQ,KAAK,K,CCvC1B,MAAMK,EAAkBC,SAASC,cAAc,qBAEzCC,EAAY,CAChBC,QAASH,SAASC,cAAc,uBAChCG,MAAOJ,SAASC,cAAc,wBAwBhC,SAASI,EAAoBC,GAC3BP,EAAgBQ,UAAYD,EACzBV,KAAI,EAACY,YAAEA,EAAWvB,OAAEA,EAAMwB,MAAEA,EAAKC,aAAEA,EAAY7B,GAAEA,MAGhD,IAAI8B,EAMJ,OAFEA,EAHGH,EAGM,mCAAmCA,IAFnC,sDAIJ,iDAAiD3B,sDACd8B,WAAgBF,iDACvBA,mGAVhB1B,EAAUE,kDACXyB,EAAajB,MAAM,EAAG,mJAexC,IAEDC,KAAK,G,CA1CVQ,EAAUC,QAAQS,iBAAiB,SAGnC,WACE,MAAMC,EAASC,aAAaC,QAAQ,WAChCF,EACFR,EAAoBW,KAAKC,MAAMJ,IAE/Bd,EAAgBQ,UAAY,E,IAPhCL,EAAUE,MAAMQ,iBAAiB,SAWjC,WACE,MAAMC,EAASC,aAAaC,QAAQ,SAChCF,EACFR,EAAoBW,KAAKC,MAAMJ,IAE/Bd,EAAgBQ,UAAY,E","sources":["src/js/genres.js","src/js/myLibraryLocalStorage.js"],"sourcesContent":["const genresNames = [\n  { id: 28, name: 'Action' },\n  { id: 12, name: 'Adventure' },\n  { id: 16, name: 'Animation' },\n  { id: 35, name: 'Comedy' },\n  { id: 80, name: 'Crime' },\n  { id: 99, name: 'Documentary' },\n  { id: 18, name: 'Drama' },\n  { id: 10751, name: 'Family' },\n  { id: 14, name: 'Fantasy' },\n  { id: 36, name: 'History' },\n  { id: 27, name: 'Horror' },\n  { id: 10402, name: 'Music' },\n  { id: 9648, name: 'Mystery' },\n  { id: 10749, name: 'Romance' },\n  { id: 878, name: 'Science Fiction' },\n  { id: 10770, name: 'TV Movie' },\n  { id: 53, name: 'Thriller' },\n  { id: 10752, name: 'War' },\n  { id: 37, name: 'Western' },\n];\n\nexport function getGenres(genreIds, genres) {\n  let genresArray = [];\n  if (genreIds === undefined) {\n    genresArray = Object.values(genres).flatMap(genre => genre.name);\n    if (genresArray.length > 3) {\n      const genresArrayShort = genresArray.slice(0, 2).join(', ') + ', Other';\n      return genresArrayShort;\n    }\n    return genresArray.join(', ') + ', Other';\n  } else if (genreIds.length === 0) {\n    return 'Other';\n  }\n\n  for (const genreId of genreIds) {\n    genresNames.map(genreName => {\n      if (genreName.id === genreId) {\n        genresArray.push(genreName.name);\n      }\n    });\n  }\n  if (genresArray.length > 3) {\n    const genresArrayShort = genresArray.slice(0, 2).join(', ') + ', Other';\n    return genresArrayShort;\n  }\n  return genresArray.join(', ');\n}\n","import { getGenres } from './genres';\n// import { LocalStorage } from './localStorage';\n\n// const localStorage = new LocalStorage();\n// localStorage.numMoviesInPages = 6; // - задаёшь сколько фильмов на странице хочешь видеть (по умолчанию 20)\n// console.log(localStorage.getPages('watched')); //  - возвращает число страниц только надо указать queue или watched\n\nconst movieCollection = document.querySelector('.movie-collection');\n\nconst buttonLib = {\n  watched: document.querySelector('.btn__library-watch'),\n  queue: document.querySelector('.btn__library-queue'),\n};\n\nbuttonLib.watched.addEventListener('click', getMoviesWatched);\nbuttonLib.queue.addEventListener('click', getMoviesQueue);\n\nfunction getMoviesWatched() {\n  const movies = localStorage.getItem('watched');\n  if (movies) {\n    createMarkupOneCard(JSON.parse(movies));\n  } else {\n    movieCollection.innerHTML = '';\n  }\n}\n\nfunction getMoviesQueue() {\n  const movies = localStorage.getItem('queue');\n  if (movies) {\n    createMarkupOneCard(JSON.parse(movies));\n  } else {\n    movieCollection.innerHTML = '';\n  }\n}\n\nfunction createMarkupOneCard(results) {\n  movieCollection.innerHTML = results\n    .map(({ poster_path, genres, title, release_date, id }) => {\n      const genresList = getGenres(genres);\n      const movieYear = release_date.slice(0, 4);\n      let poster;\n      if (!poster_path) {\n        poster = 'https://otv.one/uploads/default_image/thumbnail.jpg';\n      } else {\n        poster = `https://image.tmdb.org/t/p/w500/${poster_path}`;\n      }\n      return `  <li class=\"movie-collection__item\" data-id=\"${id}\">\n   <img class=\"movie-collection__poster\" src=\"${poster}\" alt=\"${title}\" />\n   <h2 class=\"movie-collection__title\">${title}</h2>\n   <div class=\"movie-collection__discription\">\n     <p class=\"movie-collection__genre\">${genresList}</p>\n     <p class=\"movie-collection__year\">${movieYear}</p>\n   </div>\n   <button class=\"movie-collection__button\" type=\"button\"><span class=\"movie-collection__title\">Trailer</span></button>\n</li>`;\n    })\n    .join('');\n}\n"],"names":["$a9bf4680370b89e9$var$genresNames","id","name","$a9bf4680370b89e9$export$c5604fa8028da00","genreIds","genres","genresArray","undefined","Object","values","flatMap","genre","length","slice","join","genreId","map","genreName","push","$a096e17dcc983086$var$movieCollection","document","querySelector","$a096e17dcc983086$var$buttonLib","watched","queue","$a096e17dcc983086$var$createMarkupOneCard","results","innerHTML","poster_path","title","release_date","poster","addEventListener","movies","localStorage","getItem","JSON","parse"],"version":3,"file":"my-library.bdeb8c1c.js.map"}